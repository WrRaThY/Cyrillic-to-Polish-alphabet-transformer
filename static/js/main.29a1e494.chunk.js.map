{"version":3,"sources":["services/TransliterationHelper.js","containers/App.js","serviceWorker.js","index.js"],"names":["services_TransliterationHelper","transformString","input","result","split","forEach","letter","_this","transformLetter","library","add","faPencilAlt","faCheckSquare","DONE_TYPING_INTERVAL","App","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onBackButtonClicked","event","state","ruInput","getRuInput","transformThat","document","getElementById","value","handleRussianTyping","currentTarget","clearTimeout","typingTimer","setTimeout","setState","plOutput","TransliterationHelper","setRuInput","buildGoogleTranslateUrl","notEncodedUrl","encodeURI","data","URLSearchParams","get","newRuInput","arguments","length","undefined","searchParams","set","window","history","pushState","toString","location","search","onpopstate","react_default","a","createElement","className","react_fontawesome_index_es","icon","color","size","htmlFor","id","onKeyUp","placeholder","defaultValue","contentEditable","readOnly","href","target","rel","type","faLanguage","src","process","alt","Component","Boolean","hostname","match","ReactDOM","render","src_containers_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.29a1e494.chunk.js","sourcesContent":["class TransliterationHelper {\n    transformString = (input) => {\n        if (!input) {\n            return \"\";\n        }\n\n        let result = \"\";\n        input.split('').forEach(letter => {\n            result += this.transformLetter(letter);\n        });\n\n        return result;\n    };\n\n    transformLetter = (letter) => {\n        switch (letter) {\n            case 'A':\n            case 'a':\n                return \"a\";\n            case 'Б':\n            case 'б':\n                return \"b\";\n            case 'В':\n            case 'в':\n                return \"w\";\n            case 'Г':\n            case 'г':\n                return \"g\";\n            case 'Д':\n            case 'д':\n                return \"d\";\n            case 'Е':\n            case 'е':\n                return \"je\";\n            case 'Ё':\n            case 'ё':\n                return \"jo\";\n            case 'Ж':\n            case 'ж':\n                return \"ż\";\n            case 'З':\n            case 'з':\n                return \"z\";\n            case 'И':\n            case 'и':\n                return \"i\";\n            case 'Й':\n            case 'й':\n                return \"i\";\n            case 'К':\n            case 'к':\n                return \"k\";\n            case 'Л':\n            case 'л':\n                return \"l\";\n            case 'М':\n            case 'м':\n                return \"m\";\n            case 'Н':\n            case 'н':\n                return \"n\";\n            case 'О':\n            case 'о':\n                return \"o\";\n            case 'П':\n            case 'п':\n                return \"p\";\n            case 'Р':\n            case 'р':\n                return \"r\";\n            case 'С':\n            case 'с':\n                return \"s\";\n            case 'Т':\n            case 'т':\n                return \"t\";\n            case 'У':\n            case 'у':\n                return \"u\";\n            case 'Ф':\n            case 'ф':\n                return \"f\";\n            case 'Х':\n            case 'х':\n            case 'x':\n            case 'X':\n                return \"h\";\n            case 'Ц':\n            case 'ц':\n                return \"c\";\n            case 'Ч':\n            case 'ч':\n                return \"cz\";\n            case 'Ш':\n            case 'ш':\n                return \"sz\";\n            case 'Щ':\n            case 'щ':\n                return \"sia\";\n            case 'Ы':\n            case 'ы':\n                return \"y\";\n            case 'Э':\n            case 'э':\n                return \"e\";\n            case 'Ю':\n            case 'ю':\n                return \"ju\";\n            case 'Я':\n            case 'я':\n                return \"ja\";\n            case 'Ъ':\n            case 'ъ':\n                return \"!\";\n            case 'Ь':\n            case 'ь':\n                return \"`\";\n            default:\n                return letter;\n        }\n    };\n}\n\nexport default new TransliterationHelper();\n","import React, { Component } from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faPencilAlt, faCheckSquare, faLanguage } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport \"./App.scss\";\nimport TransliterationHelper from \"../services/TransliterationHelper\";\n\nlibrary.add(faPencilAlt, faCheckSquare);\n\nconst DONE_TYPING_INTERVAL = 500;\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            typingTimer: null,\n            ruInput: this.getRuInput(window.location.search),\n            plOutput: TransliterationHelper.transformString(this.getRuInput(window.location.search))\n        };\n\n        window.onpopstate = this.onBackButtonClicked;\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <h1 className=\"transformerTitle\">Wypowiedz to!</h1>\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <h3 className=\"transformerSubtitle\">Russian to Polish pronunciation transformer</h3>\n                    </div>\n                    {/*add space here*/}\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-group shadow-textarea\">\n                                <FontAwesomeIcon\n                                    icon={faPencilAlt} color=\"orange\"\n                                    size={\"1x\"}\n                                /> <label className=\"taTitle\" htmlFor=\"russian-text\">Russian</label>\n                                <textarea\n                                    id=\"russian-text\"\n                                    className=\"form-control z-depth-1\"\n                                    onKeyUp={this.handleRussianTyping}\n                                    placeholder=\"Russian goes here\"\n                                    defaultValue={this.state.ruInput}\n                                />\n\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"form-group shadow-textarea\">\n                                <FontAwesomeIcon\n                                    icon={faCheckSquare} color=\"green\"\n                                    size={\"1x\"}\n                                /> <label className=\"taTitle\" htmlFor=\"polish-text\">A'la Polish</label>\n                                <textarea\n                                    id=\"polish-text\"\n                                    className=\"md-textarea form-control\"\n                                    contentEditable={false}\n                                    value={this.state.plOutput}\n                                    readOnly={true}\n                                    placeholder=\"something actually readable will be here\"\n                                />\n                            </div>\n                        </div>\n\n                    </div>\n                    <div className=\"row justify-content-center\">\n                        <h4 className=\"translation\">And if Russian confuses you, google eagerly provides the\n                            <a href={this.buildGoogleTranslateUrl()} target=\"_blank\" rel=\"noopener noreferrer\">\n                                <button type=\"button\" className=\"btn btn-blue\">\n                                    translation <FontAwesomeIcon\n                                    size=\"2x\"\n                                    color=\"white\"\n                                    icon={faLanguage}\n                                />\n\n                                </button>\n                            </a>\n                        </h4>\n                    </div>\n\n                    <div className=\"imageDiv\">\n                        <img src={process.env.PUBLIC_URL + '/bumblebee.png'} alt=\"bumblebeeeeeee\" />\n                    </div>\n\n\n                </div>\n                <footer className=\"page-footer font-small black\">\n                    <div className=\"py-2 footer-copyright text-center\">\n                        <span className=\"\">© 2019 Copyright:\n                            <a href=\"https://wrrathy.github.io\" target=\"_blank\" rel=\"noopener noreferrer\"> Radosław Domański</a>\n                        </span>\n                    </div>\n                </footer>\n            </div>\n        );\n    }\n\n    onBackButtonClicked = event => {\n        if(event.state){\n            const ruInput = this.getRuInput(event.state);\n            this.transformThat(ruInput);\n            document.getElementById(\"russian-text\").value = ruInput;\n        }\n    };\n\n    handleRussianTyping = event => {\n        let ruInput = event.currentTarget.value;\n\n        clearTimeout(this.state.typingTimer);\n        let typingTimer = setTimeout(() => this.transformThat(ruInput), DONE_TYPING_INTERVAL);\n\n        this.setState({ typingTimer})\n    };\n\n    transformThat = (ruInput) => {\n        let plOutput = TransliterationHelper.transformString(ruInput);\n        this.setRuInput(ruInput);\n        this.setState({ plOutput, ruInput });\n    };\n\n    buildGoogleTranslateUrl = () => {\n        let notEncodedUrl = \"https://translate.google.com/#view=home&op=translate&sl=ru&tl=en&text=\" + this.state.ruInput;\n        return encodeURI(notEncodedUrl);\n    };\n\n    getRuInput = data => {\n        const searchParams = new URLSearchParams(data);\n        return searchParams.get('ruInput') || '';\n    };\n\n    setRuInput = (newRuInput = \"\") => {\n        if (newRuInput === this.state.ruInput){\n            return;\n        }\n\n        const searchParams = new URLSearchParams();\n        searchParams.set(\"ruInput\", newRuInput);\n        window.history.pushState(searchParams.toString(), \"Search text update\", \"?\" + searchParams.toString());\n    };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}